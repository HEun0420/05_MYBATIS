<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section03.remix.EmployeeMapper">
    <!-- resultMap : 조회한 컬럼과 DTO를 매핑시키기 위한 설정  -->
    <resultMap id="employeeResultMap" type="com.ohgiraffers.section03.remix.EmployeeDTO">
        <id property="empID" column="emp_ID"/>
        <result property="empName" column="emp_Name"/>
        <result property="empNo" column="emp_Name"/>
        <result property="email" column="Email"/>
        <result property="phone" column="Phone"/>
        <result property="deptCode" column="Dept_Code"/>
        <result property="jobCode" column="job_code"/>
        <result property="salLevel" column="sal_level"/>
        <result property="bonus" column="bonus"/>
        <result property="managerId" column="manager_id"/>
        <result property="hireDate" column="hire_date"/>
        <result property="entDate" column="ent_date"/>
        <result property="entYn" column="ent_yn"/>
    </resultMap>

    <select id="selectAllEmployee" resultMap="employeeResultMap">
        select
        emp_id,
        emp_Name,
        Email,
        Phone,
        Dept_Code,
        job_code,
        sal_level,
        bonus,
        manager_id,
        hire_date,
        ent_date,
        ent_yn
        from employee
        order by emp_Id
    </select>

    <select id="selectEmployeeByCode" resultMap="employeeResultMap">
        select
        emp_id,
        emp_Name,
        Email,
        Phone,
        Dept_Code,
        job_code,
        sal_level,
        bonus,
        manager_id,
        hire_date,
        ent_date,
        ent_yn
        from employee
        where emp_Id = #{ code }
    </select>

    <select id="selectEmployeeByName" resultMap="employeeResultMap">
        select
        emp_id,
        emp_Name,
        Email,
        Phone,
        Dept_Code,
        job_code,
        sal_level,
        bonus,
        manager_id,
        hire_date,
        ent_date,
        ent_yn
        from employee
        where emp_Name = #{ empName }
    </select>
    <insert id="insertEmployee" parameterType="com.ohgiraffers.section03.remix.EmployeeDTO">
        insert into employee(
        (emp_id, emp_Name, emp_No, Email
        ,Phone, Dept_Code,job_Code
        ,sal_Level,salary,bonus,manager_Id,hire_date, ent_date, ent_yn
        )values (
        #{emp_Id},
        #{emp_name},
        #{emp_no},
        #{email},
        #{phone},
        #{dept_Code},
        #{job_Code},
        #{sal_Level},
        #{salary},
        #{bonus},
        #{manager_Id},
        #{hire_date},
        #{ent_date},
        #{ent_yn}
        )
    </insert>
<update id="updateEmployee" parameterType="com.ohgiraffers.section03.remix.EmployeeDTO">
    update employee
    set
    emp_Name = #{emp_name},
    emp_No=#{emp_no},
    Email=#{email},
    Phone=#{phone},
    Dept_Code=  #{dept_Code},
    job_Code=  #{job_Code},
    sal_Level=#{sal_Level},
    salary= #{salary},
    bonus= #{bonus},
    manager_Id=#{manager_Id},
    hire_date=#{hire_date},
    ent_date= #{ent_date},
    ent_yn=  #{ent_yn}
    where
    emp_id = #{emp_id}
</update>
    <delete id="deledtEmployee" parameterType="_int">
        delete
        from employee
        where emp_id = #{emp_id},
    </delete>
</mapper>